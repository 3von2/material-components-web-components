// NOTE: We disable `selector-class-pattern` above to allow using `mdc-` class
// selectors.
// stylelint-disable selector-class-pattern
// Ignore function name case warnings from states module
// stylelint-disable function-name-case

@use 'sass:map';
@use 'sass:string';
@use '@material/checkbox/checkbox-custom-properties';
@use '@material/theme/color-custom-properties';
@use '@material/theme/css';
@use '@material/theme/theme';
@use 'third_party/javascript/material_web_components/ripple/ripple-theme';

/// Sets theme to checkbox with given theme configuration by setting appropriate
/// CSS custom properties. Material baseline theme - `$light-theme`
/// (`material_components_web/checkbox/_checkbox-theme.scss`) is applied by
/// default.
/// @param {Map} $theme - Theme configuration to use for theming.
@mixin theme($theme) {
  @include css.declaration(
    checkbox-custom-properties.$ink-color,
    map.get($theme, checkmark-color)
  );
  @include css.declaration(
    color-custom-properties.$secondary,
    map.get($theme, container-checked-color)
  );
  @include _checkbox-hover-selector() {
    @include css.declaration(
      checkbox-custom-properties.$checked-color,
      map.get($theme, container-checked-hover-color)
    );
  }
  @include css.declaration(
    checkbox-custom-properties.$unchecked-color,
    map.get($theme, outline-color)
  );
  @include css.declaration(
    checkbox-custom-properties.$disabled-color,
    map.get($theme, container-disabled-color)
  );
  @include _checkbox-hover-selector() {
    @include css.declaration(
      checkbox-custom-properties.$unchecked-color,
      map.get($theme, outline-hover-color)
    );
  }
  @include ripple-theme.theme(
    (
      state: map.get($theme, ripple-color),
      opacity: map.get($theme, ripple-opacity),
    )
  );
}

// TODO(b/162887560): Move this to MDC core style module.
@mixin _checkbox-hover-selector() {
  .mdc-checkbox:active,
  .mdc-checkbox:hover,
  .mdc-checkbox--focused {
    @content;
  }
}
